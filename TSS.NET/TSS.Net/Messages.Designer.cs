//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSS.NetStandard {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Messages() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TSS.NetStandard.Messages", typeof(Messages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Run msbuild in the Tpm2Lib directory (ugh...).
        /// </summary>
        public static string _OnBuildError {
            get {
                return ResourceManager.GetString("_OnBuildError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BeforeDispatch.
        /// </summary>
        public static string BeforeDispatch {
            get {
                return ResourceManager.GetString("BeforeDispatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to DeviceIoControl[ACPI_RESPONSE] failed -- 0x.
        /// </summary>
        public static string DeviceIoAcpiResponse {
            get {
                return ResourceManager.GetString("DeviceIoAcpiResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to DeviceIoControl[ACPI_SUBMIT] failed -- 0x.
        /// </summary>
        public static string DeviceIoAcpiSubmit {
            get {
                return ResourceManager.GetString("DeviceIoAcpiSubmit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to DeviceIoControl error - zero returned.
        /// </summary>
        public static string DeviceIoControlError {
            get {
                return ResourceManager.GetString("DeviceIoControlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Device Path.
        /// </summary>
        public static string DevicePath {
            get {
                return ResourceManager.GetString("DevicePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to DriverStubs.FindMinTpmSimDevicePath() threw expection:.
        /// </summary>
        public static string FindPathException {
            get {
                return ResourceManager.GetString("FindPathException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid parameter.
        /// </summary>
        public static string parmError {
            get {
                return ResourceManager.GetString("parmError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TbsStubs.Tbsip_Submit_Command error {0}, but expected {1}.
        /// </summary>
        public static string SubmitError {
            get {
                return ResourceManager.GetString("SubmitError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TbsStubs.Tbsip_Submit_Command returned zero bytes.
        /// </summary>
        public static string SubmitError2 {
            get {
                return ResourceManager.GetString("SubmitError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TBS Handle.
        /// </summary>
        public static string TbsHandle {
            get {
                return ResourceManager.GetString("TbsHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Warning.  TBS shutting down with residual TPM state.  This should not occur.
        /// </summary>
        public static string TbsShutdownWithState {
            get {
                return ResourceManager.GetString("TbsShutdownWithState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Warning: TBS starting up with residual TPM state.  It has been erased..
        /// </summary>
        public static string TpmWithResidualState {
            get {
                return ResourceManager.GetString("TpmWithResidualState", resourceCulture);
            }
        }
    }
}
